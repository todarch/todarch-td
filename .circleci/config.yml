version: 2

references:

  container_config: &container_config
    docker:
    - image: circleci/openjdk:11-jdk
    working_directory: ~/repo
    environment:
      MAVEN_OPTS: -Xmx3200m

  restore_repo: &restore_repo
    restore_cache:
      keys:
      - v1-repo-{{ .Branch }}-{{ .Revision }}
      - v1-repo-{{ .Branch }}
      - v1-repo

  jars_cache_key: &jars_cache_key
    v1-dependencies-{{ checksum "build.gradle" }}
  jars_backup_cache_key: &jars_backup_cache_key
    v1-dependencies

  restore_jars: &restore_jars
    restore_cache:
      keys:
      - *jars_cache_key
      - *jars_backup_cache_key

jobs:
  checkout_code:
    <<: *container_config
    steps:
    - *restore_repo
    - checkout
    - save_cache:
        key: v1-repo-{{ .Branch }}-{{ .Revision }}
        paths:
          - .

  build:
    <<: *container_config
    steps:
    - *restore_repo
    - *restore_jars
    - run: ./gradlew build -x test
    - save_cache:
        key: *jars_cache_key
        paths:
        - ~/.gradle

  test:
    <<: *container_config
    steps:
    - *restore_repo
    - *restore_jars
    - run: ./gradlew test
    - store_test_results:
        path: build/test-results

  deploy:
    <<: *container_config
    steps:
    - *restore_repo
    - *restore_jars
    - run:
        name: Setup Environment Variables
        command: |
          echo "export TAG_SUFFIX=$(date +%Y%m%d%H%M%S)" >> $BASH_ENV
          echo 'export IMAGE="todarch/td:${CIRCLE_BRANCH}-${TAG_SUFFIX}"' >> $BASH_ENV
    - run:
        name: Publish Docker image with Jib
        command: | # DOCKER_USER/PASS is picked up from Syste.getenv
          ./gradlew jib -x test
    - add_ssh_keys:
        fingerprints:
          - "3a:a8:c9:72:2b:bd:11:2c:5d:a8:44:84:1c:8c:7d:4f"
    - run:
        name: Deploy app to server via Docker
        command: |
          ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "/bin/bash ./deploy_app ${IMAGE}"


workflows:
  version: 2

  build_test_deploy:
    jobs:
    - checkout_code
    - build:
        requires:
        - checkout_code
    - test:
        requires:
        - build
    - deploy:
        context: todarch-global-ctx
        requires:
        - test
        filters:
          branches:
            only: master
